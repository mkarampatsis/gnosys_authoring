{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../../../../../libs/ui/src/lib/alert/alert.component.ts","../../../../../../libs/ui/src/lib/alert/alert.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAU,MAAM,eAAe,CAAC;;;AAE/E,MAAM,CAAN,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,+CAAO,CAAA;IACP,2CAAK,CAAA;IACL,yCAAI,CAAA;IACJ,+CAAO,CAAA;AACT,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;AAOD,MAAM,OAAO,cAAc;IAL3B;QAMW,cAAS,GAAG,SAAS,CAAC,IAAI,CAAC;QAE3B,YAAO,GAAG,eAAe,CAAC;QAC1B,gBAAW,GAAG,KAAK,CAAC;QACpB,aAAQ,GAAG,CAAC,CAAC;QACZ,YAAO,GAA0B,IAAI,YAAY,EAAE,CAAC;KAqD/D;IAnDC,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,QAAQ,IAAI,CAAC,SAAS,EAAE;gBACtB,KAAK,SAAS,CAAC,OAAO;oBACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;oBACxB,MAAM;gBACR,KAAK,SAAS,CAAC,KAAK;oBAClB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;oBACtB,MAAM;gBACR,KAAK,SAAS,CAAC,OAAO;oBACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;oBACxB,MAAM;gBACR,KAAK,SAAS,CAAC,IAAI;oBACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,MAAM;aACT;SACF;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,IAAI,MAAM;QACR,QAAQ,IAAI,CAAC,SAAS,EAAE;YACtB,KAAK,SAAS,CAAC,OAAO;gBACpB,OAAO,OAAO,CAAC;YACjB,KAAK,SAAS,CAAC,KAAK;gBAClB,OAAO,KAAK,CAAC;YACf,KAAK,SAAS,CAAC,OAAO;gBACpB,OAAO,QAAQ,CAAC;YAClB,KAAK,SAAS,CAAC,IAAI;gBACjB,OAAO,MAAM,CAAC;SACjB;IACH,CAAC;IAED,IAAI,KAAK;QACP,OAAO;YACL,EAAE,EAAE,MAAM,IAAI,CAAC,MAAM,KAAK;YAC1B,GAAG,EAAE,QAAQ,IAAI,CAAC,MAAM,MAAM;YAC9B,IAAI,EAAE,QAAQ,IAAI,CAAC,MAAM,MAAM;YAC/B,IAAI,EAAE,QAAQ,IAAI,CAAC,MAAM,MAAM;YAC/B,WAAW,EAAE,QAAQ,IAAI,CAAC,MAAM,MAAM;YACtC,aAAa,EAAE,MAAM,IAAI,CAAC,MAAM,MAAM;YACtC,yBAAyB,EAAE,eAAe,IAAI,CAAC,MAAM,KAAK;YAC1D,aAAa,EAAE,QAAQ,IAAI,CAAC,MAAM,MAAM;SACzC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;;4GA1DU,cAAc;gGAAd,cAAc,6MCd3B,ozBA4BA;4FDda,cAAc;kBAL1B,SAAS;mBAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,wBAAwB;oBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;iBACrC;8BAEU,SAAS;sBAAjB,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,WAAW;sBAAnB,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACI,OAAO;sBAAhB,MAAM","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning,\n}\n\n@Component({\n  selector: 'ui-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css'],\n})\nexport class AlertComponent implements OnInit {\n  @Input() alertType = AlertType.Info;\n  @Input() header: string | undefined;\n  @Input() message = 'Alert Message';\n  @Input() autodismiss = false;\n  @Input() duration = 0;\n  @Output() dismiss: EventEmitter<boolean> = new EventEmitter();\n\n  ngOnInit(): void {\n    if (this.header === undefined) {\n      switch (this.alertType) {\n        case AlertType.Success:\n          this.header = 'Success';\n          break;\n        case AlertType.Error:\n          this.header = 'Error';\n          break;\n        case AlertType.Warning:\n          this.header = 'Warning';\n          break;\n        case AlertType.Info:\n          this.header = 'Info';\n          break;\n      }\n    }\n    if (this.autodismiss) {\n      setTimeout(() => this.dismiss.emit(), this.duration * 1000);\n    }\n  }\n\n  get _color() {\n    switch (this.alertType) {\n      case AlertType.Success:\n        return 'green';\n      case AlertType.Error:\n        return 'red';\n      case AlertType.Warning:\n        return 'yellow';\n      case AlertType.Info:\n        return 'blue';\n    }\n  }\n\n  get color() {\n    return {\n      bg: `bg-${this._color}-50`,\n      txt: `text-${this._color}-700`,\n      bold: `text-${this._color}-800`,\n      icon: `text-${this._color}-400`,\n      dismiss_txt: `text-${this._color}-500`,\n      dismiss_hover: `bg-${this._color}-100`,\n      dismiss_focus_ring_offset: `ring-offset-${this._color}-50`,\n      dismiss_focus: `ring-${this._color}-600`,\n    };\n  }\n\n  onDismiss() {\n    this.dismiss.emit();\n  }\n}\n","<div class=\"rounded-md {{ color.bg }} p-4\">\n  <div class=\"flex\">\n    <div class=\"ml-3\">\n      <h3 class=\"text-sm font-medium {{ color.bold }}\">{{ header }}</h3>\n      <div class=\"mt-2 text-sm {{ color.txt }}\">\n        <p>{{ message }}</p>\n      </div>\n    </div>\n    <div class=\"ml-auto pl-3\" *ngIf=\"!autodismiss\">\n      <div class=\"-mx-1.5 -my-1.5\">\n        <button\n          type=\"button\"\n          class=\"\n              inline-flex\n              {{ color.bg }}\n              p-1.5\n              {{ color.dismiss_txt }}\n              hover:{{ color.dismiss_hover }}\n              focus:outline-none\n            \"\n          (click)=\"onDismiss()\"\n        >\n          <span class=\"text-xs font-bold\">x</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n"]}